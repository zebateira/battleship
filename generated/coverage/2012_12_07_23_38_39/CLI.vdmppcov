class CLI
	types
	values
	instance variables
		public static letters : map nat1 to char := {
			1|->'A', 2|->'B', 3|->'C', 4|->'D', 5|->'E',
			6|->'F', 7|->'G', 8|->'H', 9|->'I',10|->'J' 
		};
	
		public static WATER		: int := 0;
		public static SHIP			: int := 1;
		public static HIT_SHIP		: int := 2;
		public static HIT_WATER	: int := 3;
	
	public static markers : map int to char := {
		WATER		|-> ' ',
		SHIP		|-> 'O',
		HIT_SHIP	|-> 'X',
		HIT_WATER	|-> '+'
	};
	
	operations
	
		public static printInit : Player * Player ==> ()
			printInit (p1, p2) == (
			
				IO`println("\n********************************************");
				IO`println(  "*            Battleship War Game           *");
				IO`println(  "********************************************");
				
				IO`println(IO`freadval[VDMUtil`String]("res/header.txt").#2);
	
				IO`print(  "\n************* ");
				IO`print(p1.name);
				IO`print(" Vs ");
				IO`print(p2.name);
				IO`println(" **************\n");
				
			);

		public static printEnd : Player ==> ()
			printEnd (winner) == (
				IO`print("Player ");
				IO`print(winner.name);
				IO`println(" is Victorious! You fought with bravery young lad! ");
				IO`println("I shall award you with cookies and milk. Enjoy this feast to your content!\n");
				IO`println(IO`freadval[VDMUtil`String]("res/cookies_and_milk.txt").#2);
			);

		public static printHeaders : Player ==> ()
			printHeaders(player) == (
				IO`print("*** ");
				IO`print(player.name);
				IO`println("'s boards ***\n");
			);

		public static printBoard : Board ==> ()
			printBoard(board) == (
				dcl marker : int := WATER;
			
				IO`print("   ");
				for x = 1 to Board`BOARD_SIZE do (
					IO`print(letters(x)); 
					IO`print(" ");
				);
				IO`println(" ");
				
				for y = 1 to Board`BOARD_SIZE do (
					if y <> 10 then IO`print(" ");
					IO`print(y);
					IO`print("|");
					for x = 1 to Board`BOARD_SIZE do (
						let house in set board.houses be st house.x = x and house.y = y in (
						
							if house.hasShip then (
								if house.hit then
									marker := HIT_SHIP
								else
									marker := SHIP;
							)
							else (
								if house.hit then (
									marker := HIT_WATER;
								)
								else (
									marker := WATER;
								)
							);

							IO`print(markers(marker));
							IO`print(" ");
						)
					);
					IO`print("|");
					IO`println(y);
				);

				IO`print("   ");
				for x = 1 to Board`BOARD_SIZE do (
					IO`print(letters(x)); 
					IO`print(" ");
				);
				IO`println(" ");
				IO`println(" ");
			);
		
	
		public static printBoardTabbed : Board ==> ()
			printBoardTabbed(board) == (
				dcl marker : int := WATER;
			
				IO`print("   ");
				IO`print("           ");
				for x = 1 to Board`BOARD_SIZE do (
					IO`print(letters(x)); 
					IO`print(" ");
				);
				IO`println(" ");
				
				for y = 1 to Board`BOARD_SIZE do (
					IO`print("           ");
					if y <> 10 then IO`print(" ");
					IO`print(y);
					IO`print("|");
					for x = 1 to Board`BOARD_SIZE do (
						let house in set board.houses be st house.x = x and house.y = y in (
						
							if house.hasShip then (
								if house.hit then
									marker := HIT_SHIP
								else
									marker := SHIP;
							)
							elseif house.hit then marker := HIT_WATER;

							IO`print(markers(marker));
							IO`print(" ");
							marker := WATER;
						)
					);
					IO`print("|");
					IO`println(y);
				);
	
				IO`print("   ");
				IO`print("           ");
				for x = 1 to Board`BOARD_SIZE do (
					IO`print(letters(x)); 
					IO`print(" ");
				);
				IO`println(" ");
				IO`println(" ");
			);
		
		public static printBoards : Player ==> ()
			printBoards(player) == (
				printHeaders(player);
				printBoard(player.boardplay);
				printBoardTabbed(player.boardown);
			);
		
end CLI