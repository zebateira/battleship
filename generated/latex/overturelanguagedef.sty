\usepackage{listings}

\lstdefinelanguage{VDM_SL}
  {morekeywords={RESULT, abs, all, always, and, as, be, be st, bool, by, card, cases, char, comp, compose, 
conc, dcl, def, definitions, dinter, div, dlmodule, do, dom, dunion, elems, else, elseif, end,
 error, errs, exists, exists1, exit, exports, ext, false, floor, for, for all, forall, from, 
 functions, hd, if, imports, in, in set, inds, init, inmap, int, inter, inv, inverse, iota, 
 is not yet specified, lambda, len, let, map, measure, merge, mod, module, mu, munion, nat, nat1,
  nil, not, not in set, of, operations, or, others, post, power, pre, psubset, rat, rd, real, rem, 
  renamed, return, reverse, rng, seq, seq1, set, skip, specified, st, state, struct, subset, then,
   tixe, tl, to, token, traces, trap, true, types, undefined, union, uselib, values, while, with, wr,
    yet },
   %keywordsprefix=mk\_,
   %keywordsprefix=a\_,
   %keywordsprefix=t\_,
   %keywordsprefix=w\_,
   sensitive,
   morecomment=[l]--,
   morestring=[b]",
   morestring=[b]',
  }[keywords,comments,strings]

\lstdefinelanguage{VDM_PP}
  {morekeywords={\#act, \#active, \#fin, \#req, \#waiting, 
 RESULT, abs, all, always, and, async, atomic, be, be st, bool, by, card, cases, char, class, 
 comp, compose, conc, dcl, def, dinter, div, do, dom, dunion, elems, else, elseif, end, error, 
 errs, exists, exists1, exit, ext, false, floor, for, for all, forall, from, functions, hd, if, 
 in, in set, inds, inmap, instance, instance variables, int, inter, inv, inverse, iota, is, 
 is not yet specified, is subclass of, is subclass responsibility, isofbaseclass, isofclass, 
 lambda, len, let, map, measure, merge, mod, mu, munion, mutex, nat, nat1, new, nil, not, not in set, 
 of, operations, or, others, per, periodic, post, power, pre, private, protected, psubset, public, rat,
  rd, real, rem, responsibility, return, reverse, rng, samebaseclass, sameclass, self, seq, seq1, set,
   skip, specified, st, start, startlist, static, subclass, subset, sync, then, thread, threadid, tixe,
    tl, to, token, traces, trap, true, types, undefined, union, values, variables, while, with, wr, yet },
   %keywordsprefix=mk\_,
   %keywordsprefix=a\_,
   %keywordsprefix=t\_,
   %keywordsprefix=w\_,
   sensitive,
   morecomment=[l]--,
   morestring=[b]",
   morestring=[b]',
  }[keywords,comments,strings]
  
\lstdefinelanguage{VDM_RT}
  {morekeywords={\#act, \#active, \#fin, \#req, \#waiting, 
RESULT, abs, all, always, and, async, atomic, be, be st, bool, by, card, cases, 
char, class, comp, compose, conc, cycles, dcl, def, dinter, div, do, dom, dunion, 
duration, elems, else, elseif, end, error, errs, exists, exists1, exit, ext, false, 
floor, for, for all, forall, from, functions, hd, if, in, in set, inds, inmap, instance,
 instance variables, int, inter, inv, inverse, iota, is, is not yet specified, is subclass of, 
 is subclass responsibility, isofbaseclass, isofclass, lambda, len, let, map, measure, merge, mod,
  mu, munion, mutex, nat, nat1, new, nil, not, not in set, of, operations, or, others, per, periodic,
   post, power, pre, private, protected, psubset, public, rat, rd, real, rem, responsibility, return,
    reverse, rng, samebaseclass, sameclass, self, seq, seq1, set, skip, specified, st, start, startlist,
     static, subclass, subset, sync, system, then, thread, threadid, time, tixe, tl, to, token, traces,
      trap, true, types, undefined, union, values, variables, while, with, wr, yet },
   %keywordsprefix=mk\_,
   %keywordsprefix=a\_,
   %keywordsprefix=t\_,
   %keywordsprefix=w\_,
   sensitive,
   morecomment=[l]--,
   morestring=[b]",
   morestring=[b]',
  }[keywords,comments,strings]

