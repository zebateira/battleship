class Board
	types
		public Houses = set of House;
	values
-- TODO Define values here
	instance variables
		public size: int := 10;
		public playable: bool;
		public houses: Houses := {};
		--public ships: seq of Ship := nil;
		inv card(houses) >= 1;
		inv size >= 1;
		
	operations
	
		public Board : Houses ==> Board
			Board(h) == 
			(	
				houses := h;
			)
		post card(houses) = size*size;
		
		public Board: Houses * bool ==> Board
			Board(h, t) == 
			(
				playable := t;
				houses := h;
			)
		post card(houses) = size*size;
		
		public Board : int * bool * Houses ==> Board
			Board (s, t, h) == 
			(
				size := s;
				playable := t;
				houses := h;
			)
		post card(houses) = size*size;
		
		-- returns:
		--0 => miss or already hit
		--1 => hit
		--2 => ship sunk
		public hit : House ==> int
			hit(h) ==
			(
				if not h.hasShip or h.hit then return 0
				elseif h.hasShip then 
					(
						h.ship.inc();
						if not h.ship.isDown() then return 1
						else return 2;
					)
				else return 0;
			);				
			
			-- TODO
		public mark : House ==> int
			mark(h) ==
			(
				if not h.hasShip or h.hit then return 0
				elseif h.hasShip then 
					(
						h.ship.inc();
						if not h.ship.isDown() then return 1
						else return 2;
					)
				else return 0;
			);								
end Board