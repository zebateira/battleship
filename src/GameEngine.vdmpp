class GameEngine
	types
	values
	instance variables
		houses : set of House;
		public p1: Player;
		public p2: Player;
		public board1own : Board;
		public board1play : Board;
		public board2own : Board;
		public board2play : Board;
	operations
	
		public there : () ==> ()
			there() ==
				IO`println(3);
		
		public GameEngine : int ==> GameEngine
			GameEngine (boardSize) ==
			(
				houses := genHouses(boardSize, boardSize);
				board1own := new Board(houses, false);
				board1play := new Board(houses, true);
				board2own := new Board(houses, false);
				board2play := new Board(houses, true);
				p1 := new Player("player1", board1own,board1play);
				p2 := new Player("player2", board2own,board2play);
				startGame();
			);

		public startGame : () ==> ()
			startGame () ==
			(
				-- TODO loop
				let coords = p1.play(board1own.size) in
				(
					board1play.mark(coords, board2own.hit(coords));
				);
				let coords2 = p2.play(board1own.size) in
				(
					board2play.mark(coords2, board1own.hit(coords2));
				)
			);
			
		public genHouses : int * int ==> set of House
			genHouses(x, y) ==
			(
				if x = 0 and y = 0 then
					return { new House(x, y) }
				elseif x = 0 then
					return { new House(x, y) } union genHouses(x, y-1)
				elseif y = 0 then
					return { new House(x, y) } union genHouses(x-1, y)
				else
					return { new House(x, y) } union genHouses(x, y-1) union genHouses(x-1, y)
			);

	functions
	traces
end GameEngine